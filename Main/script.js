document.addEventListener('DOMContentLoaded', () => {
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –¥–ª—è —ç–ª–µ–º–µ–Ω—Ç–æ–≤
    const elements = {
        seekBar: document.getElementById('seek-bar'),
        playPauseBtn: document.getElementById('play-pause'),
        prevSongBtn: document.getElementById('prev-song'),
        nextSongBtn: document.getElementById('next-song'),
        muteBtn: document.getElementById('mute'),
        songTitle: document.getElementById('song-title'),
        container: document.querySelector('.container'),
        typewriterElement: document.getElementById('typewriter-text')
    };

    const container = document.querySelector('.container');

    container.addEventListener('mousemove', (event) => {
        const rect = container.getBoundingClientRect();
        const centerX = rect.left + rect.width / 2;
        const centerY = rect.top + rect.height / 2;
    
        const mouseX = event.clientX;
        const mouseY = event.clientY;
    
        const deltaX = (mouseX - centerX) / rect.width;
        const deltaY = (mouseY - centerY) / rect.height;
    
        const rotationX = deltaY * 20; // –£–≥–æ–ª –Ω–∞–∫–ª–æ–Ω–∞ –ø–æ –æ—Å–∏ X —É–≤–µ–ª–∏—á–µ–Ω –¥–æ 20 –≥—Ä–∞–¥—É—Å–æ–≤
        const rotationY = deltaX * -20; // –£–≥–æ–ª –Ω–∞–∫–ª–æ–Ω–∞ –ø–æ –æ—Å–∏ Y —É–≤–µ–ª–∏—á–µ–Ω –¥–æ -20 –≥—Ä–∞–¥—É—Å–æ–≤
    
        container.style.transform = `rotateX(${rotationX}deg) rotateY(${rotationY}deg)`;
    });
    
    container.addEventListener('mouseleave', () => {
        // –°–±—Ä–æ—Å –ø–æ–≤–æ—Ä–æ—Ç–∞ –ø—Ä–∏ —É—Ö–æ–¥–µ –∫—É—Ä—Å–æ—Ä–∞ —Å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ —Å –ø–ª–∞–≤–Ω–æ–π –∞–Ω–∏–º–∞—Ü–∏–µ–π
        container.style.transform = 'rotateX(0deg) rotateY(0deg)';
    });
    
    const missingElements = [];

    for (const [key, element] of Object.entries(elements)) {
        if (!element) {
            missingElements.push(key);
        }
    }

    if (missingElements.length > 0) {
        console.error('–û–¥–∏–Ω –∏–ª–∏ –Ω–µ—Å–∫–æ–ª—å–∫–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω—ã:', missingElements.join(', '));
        return; // –ü—Ä–µ–∫—Ä–∞—â–∞–µ–º –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ, –µ—Å–ª–∏ –∫–∞–∫–æ–π-—Ç–æ —ç–ª–µ–º–µ–Ω—Ç –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç
    }

    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø–ª–µ–µ—Ä–∞ –∏ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
    const audioPlayer = document.createElement('audio');
    document.body.appendChild(audioPlayer); // –í—Å—Ç–∞–≤–ª—è–µ–º –∞—É–¥–∏–æ —ç–ª–µ–º–µ–Ω—Ç –≤ DOM

    // –ú–∞—Å—Å–∏–≤ —Å –ø–µ—Å–Ω—è–º–∏ –∏ –Ω–∞–∑–≤–∞–Ω–∏—è–º–∏
    let songs = [
        { src: 'music/fortuna.mp3', title: 'Fortuna 812 - Trytofriend' },
        { src: 'music/Song 404 speed up.mp3', title: '–í—Ä–µ–º—è –∏—Å—Ç–µ–∫–ª–æ - Song 404 speed up' },
        { src: 'music/Suka.mp3', title: 'Kristiee Ft Mapt0V Suka' },
        { src: 'music/booker-gde-papa.mp3', title: 'GDE PAPA?' },
        { src: 'music/xdree.mp3', title: 'Xdree - –ü–æ—Ç–µ—Ä—è–ª–∞ –≥–æ–ª–æ–≤—É' },
        { src: 'music/syava.mp3', title: '–°—è–≤–∞ ‚Äì –ú–µ–Ω—è –≤—Å—Ç–∞–≤–ª—è–µ—Ç –¥—ã–º' },
        { src: 'music/akashi2.mp3', title: 'Dabbackwood - –°–µ–π–¥–∂—É—Ä–æ –∞–∫–∞—à–∏ 2' },
        { src: 'music/5opkasiski.mp3', title: '5opka - –°–∏—Å—å–∫–∏' },
        { src: 'music/tox-nik.mp3', title: 'Toxi$ - –ù–ò–ö–û–ì–î–ê–ë–´ (Remix)' },
        { src: 'music/voskresenski-neupt.mp3', title: 'Voskresenskii, Wipo - –Ø –Ω–µ —É–ø–æ—Ç—Ä–µ–±–ª—è—é' },
        { src: 'music/TOLPI.mp3', title: 'Uniqe, Nkeeei, Artem Shilovets - –¢–æ–ª–ø—ã –ö—Ä–∏—á–∞—Ç' },
        { src: 'music/100–ª.mp3', title: '–ù–ê–í–ï–†–ù–û–ï –ü–û–≠–¢, –Ø–ö–û–†–™, EVEN CUTE - 100–ö' },
        { src: 'music/Baby Melo - Slappy Tap.mp3', title: 'Baby Melo - Slappy Tap' },
        { src: 'music/scalivampik.mp3', title: 'Scally Milano, uglystephan - –í–∞–º–ø–∏—Ä' },
        { src: 'music/srediti.mp3', title: 'SunThugga, Delle - –°—Ä–µ–¥–∏ —Ç—ã—Å—è—á' },
        { src: 'music/dawgs.mp3', title: 'Hanumankind' }
    ];
    let currentSongIndex = 0;

    function loadSong(index) {
        if (songs[index]) {
            audioPlayer.src = songs[index].src;
            elements.songTitle.textContent = `${songs[index].title}`;
            audioPlayer.play();
        }
    }

    function formatTime(seconds) {
        const minutes = Math.floor(seconds / 60);
        const secs = Math.floor(seconds % 60);
        return `${minutes}:${secs < 10 ? '0' : ''}${secs}`;
    }

    function playPause() {
        if (audioPlayer.paused) {
            audioPlayer.play();
            elements.playPauseBtn.querySelector('img').src = 'player-icons/pause-button.png'; // –ò–∑–º–µ–Ω–µ–Ω–∏–µ –∏–∫–æ–Ω–∫–∏ –Ω–∞ –ø–∞—É–∑—É
        } else {
            audioPlayer.pause();
            elements.playPauseBtn.querySelector('img').src = 'player-icons/play-button.png'; // –ò–∑–º–µ–Ω–µ–Ω–∏–µ –∏–∫–æ–Ω–∫–∏ –Ω–∞ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ
        }
    }

    function prevSong() {
        currentSongIndex = (currentSongIndex - 1 + songs.length) % songs.length;
        loadSong(currentSongIndex);
    }

    function updateTrackInfo() {
        const currentTime = formatTime(audioPlayer.currentTime);
        const duration = formatTime(audioPlayer.duration);
        document.getElementById('current-time').textContent = currentTime;
        document.getElementById('duration').textContent = duration;
    }

    function nextSong() {
        currentSongIndex = (currentSongIndex + 1) % songs.length;
        loadSong(currentSongIndex);
    }

    function updateSeekBar() {
        if (elements.seekBar && audioPlayer.duration) {
            elements.seekBar.value = (audioPlayer.currentTime / audioPlayer.duration) * 100;
        }
    }

    function changeSeekBar() {
        if (elements.seekBar) {
            audioPlayer.currentTime = (elements.seekBar.value / 100) * audioPlayer.duration;
        }
    }

    function updateVolume() {
        if (audioPlayer.volume === 0) {
            elements.muteBtn.querySelector('img').src = 'player-icons/mute-icon.png'; // –ò–∫–æ–Ω–∫–∞ –¥–ª—è mute
        } else {
            elements.muteBtn.querySelector('img').src = 'player-icons/speaker-icon.png'; // –ò–∫–æ–Ω–∫–∞ –¥–ª—è –≥—Ä–æ–º–∫–æ—Å—Ç–∏
        }
    }

    function toggleMute() {
        if (audioPlayer.volume === 0) {
            audioPlayer.volume = 1; // –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≥—Ä–æ–º–∫–æ—Å—Ç—å –¥–æ 100%
            elements.muteBtn.querySelector('img').src = 'player-icons/speaker-icon.png'; // –ò–∫–æ–Ω–∫–∞ –¥–ª—è –≥—Ä–æ–º–∫–æ—Å—Ç–∏
        } else {
            audioPlayer.volume = 0;
            elements.muteBtn.querySelector('img').src = 'player-icons/mute-icon.png'; // –ò–∫–æ–Ω–∫–∞ –¥–ª—è mute
        }
    }

    // –¢–∞–π–ø–∏–Ω–≥ —Ç–µ–∫—Å—Ç–∞
    const texts = [
        "Hello, I am Max1soft ",
        "Welcome to my Page!",
        "My stack is Java & Js.",
        "Start learning SQL",
        "Do you like Java?",
        "Just Chill",
        "I like this music.",
        "ü´µü§°",
        "101010101010101",
        "I'm using java 2 years.",
        "Subscribe to my Telegram!",
        "Fuck the laws!",
        "Good Design?",
        "Best of the Best!",
        "Minecraft Coder",
        "ü§î",
        "I'm 16 y.o."
    ];

    let index = 0;
    let charIndex = 0;
    let currentText = '';
    let isDeleting = false;
    const typeSpeed = 100;
    const deleteSpeed = 50;
    const pauseBetween = 2000;

    function type() {
        if (!elements.typewriterElement) return;

        currentText = texts[index];
        if (isDeleting) {
            charIndex--;
            if (charIndex === 0) {
                isDeleting = false;
                index = (index + 1) % texts.length;
                setTimeout(type, pauseBetween);
            } else {
                elements.typewriterElement.innerHTML = currentText.substring(0, charIndex);
                setTimeout(type, deleteSpeed);
            }
        } else {
            charIndex++;
            elements.typewriterElement.innerHTML = currentText.substring(0, charIndex);
            if (charIndex === currentText.length) {
                isDeleting = true;
                setTimeout(type, pauseBetween);
            } else {
                setTimeout(type, typeSpeed);
            }
        }
    }

    type();

    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    loadSong(currentSongIndex);

    audioPlayer.addEventListener('timeupdate', () => {
        updateSeekBar();
        updateTrackInfo();
    });

    // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π
    elements.seekBar.addEventListener('input', changeSeekBar);
    elements.playPauseBtn.addEventListener('click', playPause);
    elements.prevSongBtn.addEventListener('click', prevSong);
    elements.nextSongBtn.addEventListener('click', nextSong);
    elements.muteBtn.addEventListener('click', toggleMute);

    // –°–º–µ–Ω–∞ —Ç—Ä–µ–∫–∞ –ø—Ä–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏ —Ç–µ–∫—É—â–µ–≥–æ
    audioPlayer.addEventListener('ended', nextSong);
});
